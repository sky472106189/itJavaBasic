4.关于多线程并发环境下,数据的安全问题.

  4.1 为什么这个是重点?
     以后在开发中,我们的项目都是运行在服务器当中的,而服务器已经将线程的定义,
     线程对象的创建,线程的启动等,都已经实现完了.这些代码我们都不需要编写.

     (重点)重要的是:你要知道,你编写的程序需要放到一个多线程的环境下运行,你更需要关注的
     是这些数据在多线程并发的环境下是否安全的.

  4.2 什么时候数据在多线程并发的环境下会存在安全问题的呢?
     三个条件:
          条件1:多线程并发
          条件2:操作共享数据
          条件3:共享数据有修改的行为.
     满足以上三个条件,就会存在线程安全问题

  4.3 怎么解决线程安全问题呢?
     当多线程并发的情况下,有共享数据,并且这个数据还会被修改,此时就会存在
     线程安全问题,怎么解决这个问题?
         线程排队执行.(不能并发)
         用排队执行解决线程安全问题.
         这种机制被称为:线程同步机制.
         专业术语叫做:线程同步,实际上就是线程不能并发了,线程必须排队执行.

     提问:怎么解决线程安全问题呀?
         使用"线程同步机制".
     线程同步就是线程排队了,线程排队了就会牺牲一部分效率,没办法,数据安全第一位
     只有数据安全了,我们才可以谈效率.

  4.4 说到线程同步这块,涉及到这两个专业术语:
     异步编程模型:
          线程t1和线程t2各自执行各自的.t1不管t2,t2不管t1,
          谁也不需要等谁,这种编程模型叫做:异步编程模型.
          其实就是:多线程并发(效率较高)

     同步编程模型:
          线程t1和线程t2,在线程t1执行的时候,必须等待t2线程执行结束
          或者说,在t2线程执行的时候,必须等待t1线程执行结束,两个线
          程之间发生了等待关系,这就是同步编程模型.
          其实就是:线程排队执行(效率较低)

      总结:异步就是并发,同步就是排队.